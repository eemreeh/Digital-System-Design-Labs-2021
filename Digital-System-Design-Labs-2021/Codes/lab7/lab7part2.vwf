/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 2000.0;
	SIMULATION_TIME = 2000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 25.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("Clock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("DioExt")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = BIDIR;
	PARENT = "";
}

SIGNAL("DioExt[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DioExt";
}

SIGNAL("DioExt[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DioExt";
}

SIGNAL("DioExt[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DioExt";
}

SIGNAL("DioExt[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DioExt";
}

SIGNAL("DioExt[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DioExt";
}

SIGNAL("DioExt[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DioExt";
}

SIGNAL("DioExt[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DioExt";
}

SIGNAL("DioExt[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DioExt";
}

SIGNAL("RnW1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("RnW2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("RnW3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("RnW4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Sel1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Sel2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Sel3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Sel4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Reg8bit:R1|FF")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("Reg8bit:R1|FF[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R1|FF";
}

SIGNAL("Reg8bit:R1|FF[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R1|FF";
}

SIGNAL("Reg8bit:R1|FF[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R1|FF";
}

SIGNAL("Reg8bit:R1|FF[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R1|FF";
}

SIGNAL("Reg8bit:R1|FF[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R1|FF";
}

SIGNAL("Reg8bit:R1|FF[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R1|FF";
}

SIGNAL("Reg8bit:R1|FF[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R1|FF";
}

SIGNAL("Reg8bit:R1|FF[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R1|FF";
}

SIGNAL("Reg8bit:R2|FF")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("Reg8bit:R2|FF[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R2|FF";
}

SIGNAL("Reg8bit:R2|FF[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R2|FF";
}

SIGNAL("Reg8bit:R2|FF[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R2|FF";
}

SIGNAL("Reg8bit:R2|FF[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R2|FF";
}

SIGNAL("Reg8bit:R2|FF[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R2|FF";
}

SIGNAL("Reg8bit:R2|FF[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R2|FF";
}

SIGNAL("Reg8bit:R2|FF[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R2|FF";
}

SIGNAL("Reg8bit:R2|FF[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R2|FF";
}

SIGNAL("Reg8bit:R3|FF")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("Reg8bit:R3|FF[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R3|FF";
}

SIGNAL("Reg8bit:R3|FF[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R3|FF";
}

SIGNAL("Reg8bit:R3|FF[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R3|FF";
}

SIGNAL("Reg8bit:R3|FF[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R3|FF";
}

SIGNAL("Reg8bit:R3|FF[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R3|FF";
}

SIGNAL("Reg8bit:R3|FF[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R3|FF";
}

SIGNAL("Reg8bit:R3|FF[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R3|FF";
}

SIGNAL("Reg8bit:R3|FF[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R3|FF";
}

SIGNAL("DioExt[0]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DioExt[1]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DioExt[2]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DioExt[3]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DioExt[4]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DioExt[5]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DioExt[6]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DioExt[7]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Accumulator:Acc1|FF")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("Accumulator:Acc1|FF[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Accumulator:Acc1|FF";
}

SIGNAL("Accumulator:Acc1|FF[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Accumulator:Acc1|FF";
}

SIGNAL("Accumulator:Acc1|FF[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Accumulator:Acc1|FF";
}

SIGNAL("Accumulator:Acc1|FF[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Accumulator:Acc1|FF";
}

SIGNAL("Accumulator:Acc1|FF[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Accumulator:Acc1|FF";
}

SIGNAL("Accumulator:Acc1|FF[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Accumulator:Acc1|FF";
}

SIGNAL("Accumulator:Acc1|FF[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Accumulator:Acc1|FF";
}

SIGNAL("Accumulator:Acc1|FF[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Accumulator:Acc1|FF";
}

GROUP("DioExtOut")
{
	MEMBERS = "DioExt[0]~result", "DioExt[1]~result", "DioExt[2]~result", "DioExt[3]~result", "DioExt[4]~result", "DioExt[5]~result", "DioExt[6]~result", "DioExt[7]~result";
}

TRANSITION_LIST("Clock")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 20;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
	}
}

TRANSITION_LIST("DioExt[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 150.0;
		LEVEL 0 FOR 300.0;
		LEVEL Z FOR 225.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 125.0;
		LEVEL 1 FOR 75.0;
		LEVEL Z FOR 1050.0;
	}
}

TRANSITION_LIST("DioExt[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 150.0;
		LEVEL 0 FOR 300.0;
		LEVEL Z FOR 225.0;
		LEVEL 1 FOR 75.0;
		LEVEL Z FOR 125.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 1050.0;
	}
}

TRANSITION_LIST("DioExt[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 150.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL Z FOR 225.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 125.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 1050.0;
	}
}

TRANSITION_LIST("DioExt[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 150.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL Z FOR 225.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 125.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 1050.0;
	}
}

TRANSITION_LIST("DioExt[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 150.0;
		LEVEL 0 FOR 300.0;
		LEVEL Z FOR 225.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 125.0;
		LEVEL 1 FOR 75.0;
		LEVEL Z FOR 1050.0;
	}
}

TRANSITION_LIST("DioExt[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 150.0;
		LEVEL 0 FOR 300.0;
		LEVEL Z FOR 225.0;
		LEVEL 1 FOR 75.0;
		LEVEL Z FOR 125.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 1050.0;
	}
}

TRANSITION_LIST("DioExt[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 150.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL Z FOR 225.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 125.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 1050.0;
	}
}

TRANSITION_LIST("DioExt[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 150.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL Z FOR 225.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 125.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 1050.0;
	}
}

TRANSITION_LIST("RnW1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("RnW2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 450.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1450.0;
	}
}

TRANSITION_LIST("RnW3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 550.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1350.0;
	}
}

TRANSITION_LIST("RnW4")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 750.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1150.0;
	}
}

TRANSITION_LIST("Sel1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1150.0;
	}
}

TRANSITION_LIST("Sel2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1450.0;
	}
}

TRANSITION_LIST("Sel3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 350.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1350.0;
	}
}

TRANSITION_LIST("Sel4")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 450.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 1050.0;
	}
}

TRANSITION_LIST("Reg8bit:R1|FF[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 852.967;
		LEVEL 1 FOR 1147.033;
	}
}

TRANSITION_LIST("Reg8bit:R1|FF[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("Reg8bit:R1|FF[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("Reg8bit:R1|FF[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 252.992;
		LEVEL 1 FOR 1747.008;
	}
}

TRANSITION_LIST("Reg8bit:R1|FF[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 852.992;
		LEVEL 1 FOR 1147.008;
	}
}

TRANSITION_LIST("Reg8bit:R1|FF[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("Reg8bit:R1|FF[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("Reg8bit:R1|FF[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 253.006;
		LEVEL 1 FOR 1746.994;
	}
}

TRANSITION_LIST("Reg8bit:R2|FF[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("Reg8bit:R2|FF[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("Reg8bit:R2|FF[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 353.006;
		LEVEL 1 FOR 1646.994;
	}
}

TRANSITION_LIST("Reg8bit:R2|FF[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("Reg8bit:R2|FF[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("Reg8bit:R2|FF[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("Reg8bit:R2|FF[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 352.954;
		LEVEL 1 FOR 1647.046;
	}
}

TRANSITION_LIST("Reg8bit:R2|FF[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("Reg8bit:R3|FF[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("Reg8bit:R3|FF[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("Reg8bit:R3|FF[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 452.992;
		LEVEL 1 FOR 1547.008;
	}
}

TRANSITION_LIST("Reg8bit:R3|FF[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 452.992;
		LEVEL 1 FOR 1547.008;
	}
}

TRANSITION_LIST("Reg8bit:R3|FF[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("Reg8bit:R3|FF[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("Reg8bit:R3|FF[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 453.006;
		LEVEL 1 FOR 1546.994;
	}
}

TRANSITION_LIST("Reg8bit:R3|FF[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 452.954;
		LEVEL 1 FOR 1547.046;
	}
}

TRANSITION_LIST("DioExt[0]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 150.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL Z FOR 18.431;
		LEVEL 0 FOR 97.055;
		LEVEL 1 FOR 2.278;
		LEVEL Z FOR 0.461;
		LEVEL 1 FOR 95.863;
		LEVEL Z FOR 10.912;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 13.404;
		LEVEL 1 FOR 96.013;
		LEVEL Z FOR 15.583;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 1050.0;
	}
}

TRANSITION_LIST("DioExt[1]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 150.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL Z FOR 18.013;
		LEVEL 1 FOR 99.333;
		LEVEL Z FOR 0.461;
		LEVEL 1 FOR 95.863;
		LEVEL Z FOR 11.33;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 12.986;
		LEVEL 0 FOR 96.013;
		LEVEL Z FOR 16.001;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 1050.0;
	}
}

TRANSITION_LIST("DioExt[2]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 150.0;
		LEVEL 0 FOR 300.0;
		LEVEL Z FOR 18.197;
		LEVEL 0 FOR 98.186;
		LEVEL 1 FOR 0.547;
		LEVEL 0 FOR 0.6;
		LEVEL Z FOR 0.461;
		LEVEL 0 FOR 95.863;
		LEVEL Z FOR 11.146;
		LEVEL 1 FOR 75.0;
		LEVEL Z FOR 13.17;
		LEVEL 0 FOR 96.013;
		LEVEL Z FOR 15.817;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 1050.0;
	}
}

TRANSITION_LIST("DioExt[3]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 150.0;
		LEVEL 0 FOR 300.0;
		LEVEL Z FOR 18.52;
		LEVEL 0 FOR 99.333;
		LEVEL Z FOR 0.461;
		LEVEL 0 FOR 95.863;
		LEVEL Z FOR 10.823;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 13.493;
		LEVEL 1 FOR 96.013;
		LEVEL Z FOR 15.494;
		LEVEL 1 FOR 75.0;
		LEVEL Z FOR 1050.0;
	}
}

TRANSITION_LIST("DioExt[4]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 150.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL Z FOR 17.742;
		LEVEL 0 FOR 98.717;
		LEVEL 1 FOR 0.616;
		LEVEL Z FOR 0.461;
		LEVEL 1 FOR 95.863;
		LEVEL Z FOR 11.601;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 12.715;
		LEVEL 1 FOR 96.013;
		LEVEL Z FOR 16.272;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 1050.0;
	}
}

TRANSITION_LIST("DioExt[5]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 150.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL Z FOR 16.504;
		LEVEL 1 FOR 99.333;
		LEVEL Z FOR 0.461;
		LEVEL 1 FOR 95.863;
		LEVEL Z FOR 12.839;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 11.477;
		LEVEL 1 FOR 0.668;
		LEVEL 0 FOR 95.345;
		LEVEL Z FOR 17.51;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 1050.0;
	}
}

TRANSITION_LIST("DioExt[6]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 150.0;
		LEVEL 0 FOR 300.0;
		LEVEL Z FOR 18.351;
		LEVEL 0 FOR 97.908;
		LEVEL 1 FOR 0.308;
		LEVEL 0 FOR 1.117;
		LEVEL Z FOR 0.461;
		LEVEL 0 FOR 95.863;
		LEVEL Z FOR 10.992;
		LEVEL 1 FOR 75.0;
		LEVEL Z FOR 13.324;
		LEVEL 0 FOR 96.013;
		LEVEL Z FOR 15.663;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 1050.0;
	}
}

TRANSITION_LIST("DioExt[7]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 150.0;
		LEVEL 0 FOR 300.0;
		LEVEL Z FOR 18.679;
		LEVEL 0 FOR 99.333;
		LEVEL Z FOR 0.461;
		LEVEL 0 FOR 95.863;
		LEVEL Z FOR 10.664;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 13.652;
		LEVEL 1 FOR 96.013;
		LEVEL Z FOR 15.335;
		LEVEL 1 FOR 75.0;
		LEVEL Z FOR 1050.0;
	}
}

TRANSITION_LIST("Accumulator:Acc1|FF[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 752.967;
		LEVEL 1 FOR 1247.033;
	}
}

TRANSITION_LIST("Accumulator:Acc1|FF[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 653.006;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1246.994;
	}
}

TRANSITION_LIST("Accumulator:Acc1|FF[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 553.006;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1346.994;
	}
}

TRANSITION_LIST("Accumulator:Acc1|FF[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 653.006;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 1046.994;
	}
}

TRANSITION_LIST("Accumulator:Acc1|FF[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 753.006;
		LEVEL 1 FOR 1246.994;
	}
}

TRANSITION_LIST("Accumulator:Acc1|FF[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 652.967;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1247.033;
	}
}

TRANSITION_LIST("Accumulator:Acc1|FF[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 552.967;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1347.033;
	}
}

TRANSITION_LIST("Accumulator:Acc1|FF[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 652.967;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 1047.033;
	}
}

DISPLAY_LINE
{
	CHANNEL = "Clock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6, 7, 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "RnW1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RnW2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RnW3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RnW4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Sel1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Sel2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Sel3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Sel4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R1|FF";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
	CHILDREN = 19, 20, 21, 22, 23, 24, 25, 26;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R1|FF[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R1|FF[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R1|FF[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R1|FF[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R1|FF[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R1|FF[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R1|FF[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R1|FF[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R2|FF";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 0;
	CHILDREN = 28, 29, 30, 31, 32, 33, 34, 35;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R2|FF[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R2|FF[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R2|FF[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R2|FF[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R2|FF[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R2|FF[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R2|FF[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R2|FF[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R3|FF";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 0;
	CHILDREN = 37, 38, 39, 40, 41, 42, 43, 44;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R3|FF[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R3|FF[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R3|FF[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R3|FF[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R3|FF[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R3|FF[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R3|FF[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R3|FF[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "Accumulator:Acc1|FF";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 0;
	CHILDREN = 46, 47, 48, 49, 50, 51, 52, 53;
}

DISPLAY_LINE
{
	CHANNEL = "Accumulator:Acc1|FF[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Accumulator:Acc1|FF[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Accumulator:Acc1|FF[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Accumulator:Acc1|FF[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Accumulator:Acc1|FF[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Accumulator:Acc1|FF[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Accumulator:Acc1|FF[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Accumulator:Acc1|FF[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "DioExtOut";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 0;
	CHILDREN = 55, 56, 57, 58, 59, 60, 61, 62;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[7]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[6]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[5]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[4]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[3]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[2]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[1]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[0]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 54;
}

TIME_BAR
{
	TIME = 22000;
	MASTER = TRUE;
}
;
